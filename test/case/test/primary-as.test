-- echo initialization
CREATE TABLE ages(id int, age_before int, name char);

INSERT INTO ages VALUES (1, 25, 'Alice');
INSERT INTO ages VALUES (2, 30, 'Bob');
INSERT INTO ages VALUES (3, 35, 'Cathy');

-- echo 1. column aliasing
SELECT age_before AS age FROM ages;

-- echo 2. table aliasing
SELECT tbl.age_before FROM ages AS tbl;

-- echo 3. column and table aliasing combined
SELECT tbl.age_before AS age FROM ages AS tbl;

-- echo 4. error with nonexistent column
SELECT age_before AS nonexistent FROM ages2;

-- echo 5. error with empty alias
SELECT age_before AS '' FROM ages;

-- echo 6. select many columns with alias
SELECT id AS ID, age_before AS Age FROM ages;

CREATE TABLE join_table_1(id int, name char);
CREATE TABLE join_table_2(id int, num int);

INSERT INTO join_table_1 VALUES (1, 'a');
INSERT INTO join_table_2 VALUES (1, 2);
Select * from join_table_1 as t1, join_table_2 as t2 where join_table_1.id=join_table_2.id;

CREATE TABLE table_alias_1(id int, col1 int, feat1 float);
CREATE TABLE table_alias_2(id int, col2 int, feat2 float);
CREATE TABLE table_alias_3(id int, col3 int, feat3 float);

INSERT INTO table_alias_1 VALUES (13, 62, 67.4);
INSERT INTO table_alias_1 VALUES (49, 49, 98.1);


INSERT INTO table_alias_2 VALUES (12, 123, 67.4);
INSERT INTO table_alias_2 VALUES (123, 23, 98.1);
INSERT INTO table_alias_2 VALUES (49, 49, 98.1);

select * from table_alias_1 t1 where id in (select t2.id from table_alias_2 t2 where t2.col2 >= t1.col1);
